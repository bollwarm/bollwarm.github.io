{"id":72,"date":"2013-07-11T16:54:38","date_gmt":"2013-07-11T08:54:38","guid":{"rendered":"http:\/\/localhost\/?p=72"},"modified":"2013-07-11T16:54:38","modified_gmt":"2013-07-11T08:54:38","slug":"vc%e5%88%b6%e4%bd%9c%e7%b3%bb%e7%bb%9f%e6%9c%8d%e5%8a%a1zz","status":"publish","type":"post","link":"http:\/\/ijz.me\/?p=72","title":{"rendered":"VC\u5236\u4f5c\u7cfb\u7edf\u670d\u52a1\/zz\/"},"content":{"rendered":"<p>\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4e86 OpenSCManager\u3001CreateService\u3001OpenService\u3001ControlService\u3001DeleteService\u3001RegisterServiceCtrlHandler\u3001SetServiceStatus\u3001StartServiceCtrlDispatcher\u7b49\u64cd\u4f5c\u670d\u52a1\u7a0b\u5e8f\u7684\u4e3b\u8981\u51e0\u4e2aAPI\u7684\u7528\u6cd5\uff0c\u5177\u4f53\u7684\u51fd\u6570\u53c2\u6570\u5927\u5bb6\u53ef\u4ee5\u67e5\u9605MSDN\u3002<\/p>\n<p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u670d\u52a1\u5e94\u8be5\u7a0b\u5e8f\u5462\uff1f\u670d\u52a1\u7a0b\u5e8f\u5c31\u50cf\u7cfb\u7edf\u7684\u4e00\u4e9b\u670d\u52a1\u4e00\u6837\uff0c\u80fd\u591f\u81ea\u52a8\u5730\u542f\u52a8\uff0c\u5e76\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff1b\u800c\u4e14\u56e0\u4e3a\u670d\u52a1\u7a0b\u5e8f\u7684\u5728\u5c42\u6b21\u4e0a\u548c\u4e00\u822c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u540c\uff0c\u5176\u80fd\u591f\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\u5c31\u81ea\u52a8\u5730\u8fd0\u884c\uff0c\u800c\u4e0d\u50cf\u4e00\u822c\u7684\u5e94\u7528\u7a0b\u5e8f\u90a3\u6837\u4e00\u5b9a\u8981\u5728\u767b\u9646\u540e\u624d\u80fd\u8fd0\u884c\uff0c\u8fd9\u4e9b\u5c31\u662f\u670d\u52a1\u7684\u4e00\u4e9b\u597d\u5904\u4e86\uff0c\u5982\u679c\u4f60\u4e5f\u60f3\u4f60\u7684\u7a0b\u5e8f\u5177\u6709\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u670d\u52a1\u5e94\u7528\u7a0b\u5e8f\u4e86\u3002\u4e0b\u9762\u5c31\u8ddf\u7740\u6211\u4e00\u6b65\u4e00\u6b65\u5730\u6559\u4f60\u600e\u4e48\u53bb\u521b\u5efa\u4e00\u4e2a\u670d\u52a1\u5e94\u7528\u7a0b\u5e8f\u5427\u3002<\/p>\n<p>\u4e00\u3001\u5efa\u7acb Win32 Application \u5e94\u7528\u7a0b\u5e8f\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5efa\u7acb\u5176\u5b83\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u670d\u52a1\u4e00\u822c\u662f\u6ca1\u6709\u7528\u6237\u754c\u9762\u7684\uff09\uff0c\u5e76\u547d\u540d\u4e3a ServiceTest\u3002<\/p>\n<p>\u4e8c\u3001\u5b9a\u4e49\u5168\u5c40\u51fd\u6570\u53d8\u91cf\u3002\u8fd9\u91cc\u4e3b\u8981\u662f\u8bbe\u7f6e\u670d\u52a1\u53e5\u67c4\u548c\u72b6\u6001\u3002 BOOL IsInstalled(); BOOL Install(); BOOL Uninstall(); void LogEvent(LPCTSTR pszFormat, &#8230;); void WINAPI ServiceMain(); void WINAPI ServiceStrl(DWORD dwOpcode); TCHAR szServiceName[] = _T(&#8220;ServiceTest&#8221;); BOOL bInstall; SERVICE_STATUS_HANDLE hServiceStatus; SERVICE_STATUS status; DWORD dwThreadID;<\/p>\n<p>\u4e09\u3001\u6dfb\u52a0Init\u521d\u59cb\u5316\u51fd\u6570\u3002 void Init() { hServiceStatus = NULL; status.dwSer103fviceType = SERVICE_WIN32_OWN_PROCESS; status.dwCurrentState = SERVICE_STOPPED; tatus.dwControlsAccepted = SERVICE_ACCEPT_STOP; status.dwWin32ExitCode = 0; status.dwServiceSpecificExitCode = 0; status.dwCheckPoint = 0; status.dwWaitHint = 0; }<\/p>\n<p>\u56db\u3001\u6dfb\u52a0\u5b89\u88c5\u548c\u5220\u9664\u670d\u52a1\u51fd\u6570\u3002\u8fd9\u91cc\u4e3b\u8981\u662f\u7528\u5230\u4e86\u4e94\u4e2a\u51fd\u6570 OpenSCManager,CreateService,OpenService,ControlService\u548cDeleteService \u3002<br \/>\nOpenSCManager \u7528\u4e8e\u6253\u5f00\u670d\u52a1\u63a7\u5236\u7ba1\u7406\u5668\uff1bCreateService \u7528\u4e8e\u521b\u5efa\u670d\u52a1\uff1bOpenService\u7528\u4e8e\u6253\u5f00\u5df2\u6709\u7684\u670d\u52a1\uff0c\u8fd4\u56de\u8be5\u670d\u52a1\u7684\u53e5\u67c4\uff1bControlService\u5219\u7528\u4e8e\u63a7\u5236\u5df2\u6253\u5f00\u7684\u670d\u52a1\u72b6\u6001\uff0c\u8fd9\u91cc\u662f\u8ba9\u670d\u52a1\u505c\u6b62\u540e\u624d\u5220\u9664\uff1bDeleteService \u7528\u4e8e\u5220\u9664\u6307\u5b9a\u670d\u52a1\u3002<\/p>\n<p>BOOL Install(); { \/\/\u8fd9\u91cc\u5217\u51fa\u4e3b\u8981\u7684\u4e24\u4e2a\u51fd\u6570\uff0c\u5176\u5b83\u7684\u53ef\u4ee5\u5728\u4ee3\u7801\u91cc\u627e\u3002<br \/>\n\/\/\u6253\u5f00\u670d\u52a1\u63a7\u5236\u7ba1\u7406\u5668<br \/>\nOpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS); \/\/\u521b\u5efa\u670d\u52a1<br \/>\nSC_HANDLE hService = ::CreateService( hSCM, szServiceName, szServiceName, SERVICE_ALL_ACCESS, SERVICE_WIN32_OWN_PROCESS, SERVICE_DEMAND_START, SERVICE_ERROR_NORMAL, szFilePath, NULL, NULL, _T(&#8220;&#8221;), NULL, NULL);<br \/>\n::CloseServiceHandle(hService);<\/p>\n<p>::CloseServiceHandle(hSCM); }<\/p>\n<p>BOOL Uninstall(); { \/\/\u8fd9\u91cc\u5217\u51fa\u4e3b\u8981\u7684\u4e24\u4e2a\u51fd\u6570\uff0c\u5176\u5b83\u7684\u53ef\u4ee5\u5728\u4ee3\u7801\u91cc\u627e\u3002<br \/>\n\/\/\u6253\u5f00\u670d\u52a1\u63a7\u5236\u7ba1\u7406\u5668<br \/>\nOpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS);<\/p>\n<p>\/\/\u6253\u5f00\u670d\u52a1<br \/>\nOpenService(hSCM, szServiceName, SERVICE_STOP | DELETE);<\/p>\n<p>\/\/\u505c\u6b62\u670d\u52a1<br \/>\nControlService(hService, SERVICE_CONTROL_STOP, &amp;status);<\/p>\n<p>\/\/\u5220\u9664\u670d\u52a1<br \/>\nDeleteService(hService); \u2026 }<\/p>\n<p>\u4e94\u3001\u6dfb\u52a0\u670d\u52a1\u4e3b\u7ebf\u7a0b\u51fd\u6570\u548c\u63a7\u5236\u51fd\u6570\u3002\u8fd9\u91cc\u8c03\u7528 RegisterServiceCtrlHandler \u6765\u6ce8\u518c\u670d\u52a1\u7684\u63a7\u5236\u51fd\u6570\uff0c\u8fd9\u91cc\u8981\u8bbe\u7f6estatus.dwControlsAccepted \u4e3a SERVICE_ACCEPT_STOP\uff0c\u5426\u5219\u4f60\u4e0d\u80fd\u63a7\u5236\u8fd9\u4e2a\u670d\u52a1\u7684\u72b6\u6001\u3002<\/p>\n<p>void WINAPI ServiceMain() { \/\/ Register the control request handler<br \/>\nstatus.dwCurrentState = SERVICE_START_PENDING;<br \/>\nstatus.dwControlsAccepted = SERVICE_ACCEPT_STOP;\/\/\u8fd9\u4e2a\u8981\u4f7f\u7528\uff0c\u5426\u5219\u4f60\u4e0d\u80fd\u63a7\u5236<br \/>\n\/\/\u6ce8\u518c\u670d\u52a1\u63a7\u5236<br \/>\nhServiceStatus = RegisterServiceCtrlHandler(szServiceName, ServiceStrl);<br \/>\nif (hServiceStatus == NULL) { LogEvent(_T(&#8220;Handler not installed&#8221;));<br \/>\nreturn; }<br \/>\nSetServiceStatus(hServiceStatus, &amp;status);<br \/>\nstatus.dwWin32ExitCode = S_OK;<br \/>\nstatus.dwCheckPoint = 0;<br \/>\nstatus.dwWaitHint = 0;<br \/>\nstatus.dwCurrentState = SERVICE_RUNNING;<br \/>\nSetServiceStatus(hServiceStatus, &amp;status);<br \/>\n\/\/\u6a21\u62df\u670d\u52a1\u7684\u8fd0\u884c\uff0c10\u540e\u81ea\u52a8\u9000\u51fa\u3002\u5e94\u7528\u65f6\u5c06\u4e3b\u8981\u4efb\u52a1\u653e\u4e8e\u6b64\u5373\u53ef<br \/>\nint i = 0; while (i &lt; 10) { Sleep(1000); i++; } \/\/<br \/>\nstatus.dwCurrentState = SERVICE_STOPPED;<br \/>\nSetServiceStatus(hServiceStatus, &amp;status);<br \/>\nLogEvent(_T(&#8220;Service stopped&#8221;)); }<\/p>\n<p>\u516d\u3001\u5728\u4e3b\u7ebf\u7a0b\u51fd\u6570\u91cc\u6ce8\u518c\u63a7\u5236\u51fd\u6570\u548c\u7a0b\u5e8f\u6267\u884c\u4e3b\u4f53\u3002\u8fd9\u91cc\u4e3b\u8981\u662f\u8bf4\u660e\u8fd9\u5c31\u662f\u7a0b\u5e8f\u7684\u6267\u884c\u4f53\u3002<br \/>\nvoid WINAPI ServiceMain() { \u2026<br \/>\n\/\/\u6a21\u62df\u670d\u52a1\u7684\u8fd0\u884c\uff0c10\u540e\u81ea\u52a8\u9000\u51fa\u3002\u5e94\u7528\u65f6\u5c06\u4e3b\u8981\u4efb\u52a1\u653e\u4e8e\u6b64\u5373\u53ef<br \/>\nint i = 0; while (i &lt; 10) { Sleep(1000); i++; } \u2026 }<\/p>\n<p>\u4e03\u3001\u6700\u540e\uff0c\u8981\u5728main\u51fd\u6570\u91cc\u6ce8\u518c\u6dfb\u52a0\u5b89\u88c5\u3001\u5220\u9664\u3001\u6ce8\u518c\u4e3b\u51fd\u6570\u3002<\/p>\n<p>int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) { Init(); dwThreadID = ::GetCurrentThreadId(); SERVICE_TABLE_ENTRY st[] = { { szServiceName, (LPSERVICE_MAIN_FUNCTION)ServiceMain }, { NULL, NULL } }; if (stricmp(lpCmdLine, &#8220;\/install&#8221;) == 0) { Install(); } else if (stricmp(lpCmdLine, &#8220;\/uninstall&#8221;) == 0) { Uninstall(); } else { if (!::StartServiceCtrlDispatcher(st)) { LogEvent(_T(&#8220;Register Service Main Function Error!&#8221;)); } } return 0; }<\/p>\n<p>\u516b\u3001\u603b\u7ed3\u3002\u5176\u5b9e\u505a\u4e00\u4e2a\u670d\u52a1\u7a0b\u5e8f\u5e76\u4e0d\u96be\uff0c\u4e3b\u8981\u662f\u61c2\u5f97\u7a0b\u5e8f\u7684\u6267\u884c\u4f53\u653e\u4e8e\u54ea\u91cc\uff1f\u548c\u6ce8\u518c\u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\u548c\u6ce8\u518c\u63a7\u5236\u51fd\u6570\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u6ca1\u6709\u6ce8\u518c\u7684\u8bdd\uff0c\u4f60\u5c31\u7a0b\u5e8f\u5c31\u4e0d\u77e5\u9053\u5982\u4f55\u53bb\u63a7\u5236\u4e86\u3002statu103fs.dwControlsAccepted = SERVICE_ACCEPT_STOP;\u8fd9\u4e2a\u4e5f\u91cd\u8981\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u8bbe\u7f6e\u7684\u8bdd\uff0c\u90a3\u4e48\u670d\u52a1\u5c31\u4e0d\u4f1a\u53d7\u4f60\u63a7\u5236\u4e86\u3002<\/p>\n","protected":false},"excerpt":{"rendered":"<p>\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u4e86 OpenSCManager\u3001CreateService\u3001OpenService\u3001Control [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[12],"tags":[],"class_list":["post-72","post","type-post","status-publish","format-standard","hentry","category-program"],"_links":{"self":[{"href":"http:\/\/ijz.me\/index.php?rest_route=\/wp\/v2\/posts\/72","targetHints":{"allow":["GET"]}}],"collection":[{"href":"http:\/\/ijz.me\/index.php?rest_route=\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/ijz.me\/index.php?rest_route=\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/ijz.me\/index.php?rest_route=\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"http:\/\/ijz.me\/index.php?rest_route=%2Fwp%2Fv2%2Fcomments&post=72"}],"version-history":[{"count":0,"href":"http:\/\/ijz.me\/index.php?rest_route=\/wp\/v2\/posts\/72\/revisions"}],"wp:attachment":[{"href":"http:\/\/ijz.me\/index.php?rest_route=%2Fwp%2Fv2%2Fmedia&parent=72"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/ijz.me\/index.php?rest_route=%2Fwp%2Fv2%2Fcategories&post=72"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/ijz.me\/index.php?rest_route=%2Fwp%2Fv2%2Ftags&post=72"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}